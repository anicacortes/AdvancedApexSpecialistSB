public without sharing class ChartHelper {

    @AuraEnabled
    public static List<chartData> GetInventory(){
        List<chartData> cht = new List<chartData>();

        //AggregateResult[] groupedResult = [Select Product2Id, sum(Quantity) totalQuantity from OrderItem where product2Id in :productMap.keySet() group by product2Id];
        //productMap.get((String)result.get('Product2Id')).Quantity_Ordered__c = Integer.valueOf(result.get('totalQuantity'));
        AggregateResult[] groupedResult = [SELECT Family, SUM(Quantity_Remaining__c) FROM Product2 WHERE IsActive = TRUE AND Quantity_Remaining__c > 0 GROUP BY Family];

        for(AggregateResult record : groupedResult) {
            ChartData newData = new ChartData((String) record.get('Family'), (Decimal) record.get('expr0'));
            //newData.name = (String) record.get('Family');
            //newData.val = (Decimal) record.get('expr0');
            cht.add(newData);
        }
        //ToDo: Perform a calculation that aggregates active Products that have a positive Quantity_Remaining__c
        //  And return a list of chartData
        //  Where the name is the Product Family and the Qty is the sum of the Quantity_Remaining__c
        return cht;
    }

    public class ChartData {
        public String name {get;set;}
        public Decimal val {get;set;}

        public ChartData(String name, Decimal val){
            this.name = name;
            this.val = val;
        }
    }

}